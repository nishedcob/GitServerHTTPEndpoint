"""
Django settings for GitServerHTTPEndpoint project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '8brkc+rp3pvq&u#v$+los9_7+ds)pgmcv%%@0cv01@vdtkxp_k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'authApp',
    'apiApp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'GitServerHTTPEndpoint.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'GitServerHTTPEndpoint.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'gitendpointdb',
        'USER': 'gitendpointuser',
        'PASSWORD': 'g1T3Ndp01Nt_$3r',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

AUTH_TOKENS_SHOW = {
    'app_name': True,
    'dates': True,
    'date_create': True,
    'date_edit': True,
    'date_expire': True,
    'secret': False,
    'token': True,
    'full_token': False,
    'edit': True,
    'delete': True,
    'regenerate_secret': True
}

BARE_GIT_REPOS_ROOT = '/home/git/repositories'
FULL_GIT_REPOS_ROOT = '/home/git/full'

# Define Structure
SYSTEM_DEBUG = {
    'git': {
        'debug': True,
        'managers': {
            'debug': None,
            'types': {
                'generic': None,
                'namespace': None,
                'repository': None,
                'file': None,
                'git': None
            }
        }
    }
}

# Fill SYSTEM_DEBUG
SYSTEM_DEBUG['git']['managers']['debug'] = SYSTEM_DEBUG['git']['debug'] and True
for type, value in [('generic', True), ('namespace', True), ('repository', True), ('file', True), ('git', True)]:
    SYSTEM_DEBUG['git']['managers']['types'][type] = SYSTEM_DEBUG.get('git', {'managers': {'debug': True}})\
        .get('managers', {'debug': True}).get('debug', True) and value
